/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/v2ANRXHxRXn
 */
import {
  ResizableHandle,
  ResizablePanel,
  ResizablePanelGroup,
} from "@/(components)//ui/resizable";
import { useUser } from "@clerk/nextjs";
import { useMutation } from "convex/react";
import { useRouter } from "next/navigation";
import { useEffect, useState } from "react";
import ReactPlayer from "react-player";
import { ClipLoader } from "react-spinners";
import { api } from "../../convex/_generated/api";
import ChatBot from "./ChatBot";

export function ChatComponent({ videoUrl }: { videoUrl: string }) {
  const [loaded, setLoaded] = useState<boolean>(false);
  const [youtubeVideo, setYoutubeVideo] = useState<string>("");
  const [errors, setErrors] = useState<string[]>([]);
  const [loading, setLoading] = useState<boolean>(false);
  const router = useRouter();
  const auth = useUser();
  const userId = auth.user?.id as string;

  const handleClick = async (e: any) => {
    e.preventDefault();
    if (youtubeVideo === "") {
      setErrors(["Please enter a valid YouTube URL"]);
      return;
    }
    if (youtubeVideo !== "") {
      setErrors([]);
      setLoading(true);
      router.push(`/home?video=${youtubeVideo}`);
    }
  };

  const sendMessage = useMutation(api.messaging.send);
  const clearMesages = useMutation(api.messaging.clear);

  const [expanded, setExpanded] = useState(false);
  const [isScrolled, setScrolled] = useState(false);

  const [input, setInput] = useState("");

  const handleSend = async (event: any) => {
    event.preventDefault();
    await sendMessage({ message: input, userId });
    setInput("");
    setScrolled(false);
  };

  const handleClearMessages = async () => {
    await clearMesages({ userId });
    setScrolled(false);
  };

  useEffect(() => {
    setTimeout(() => {
      setLoaded(true);
    }, 5000);
  }, []);

  return (
    <div key="1" className="flex flex-col h-full w-full lg:flex-row p-2">
      <div className="w-full lg:w-[1040px] flex flex-col border-b">
        <div className="flex-1 flex items-center justify-center">
          <ResizablePanelGroup
            className="max-w-3xl w-full p-2 rounded-lg"
            direction="horizontal"
          >
            <ResizablePanel defaultSize={200}>
              <ReactPlayer url={videoUrl} width="100%" height="400px" />
            </ResizablePanel>
            <ResizableHandle withHandle />
            <ResizablePanel defaultSize={0} />
          </ResizablePanelGroup>
        </div>
      </div>
      <div className="w-full lg:w-full flex flex-col gap-1">
        <div className="flex-1 flex flex-col border rounded-sm">
          {loaded ? (
            <>
              <div className="grid gap-2">
                <div className="rounded-xl w-full h-full aspect-video">
                  <span className="w-full aspect-video rounded-md bg-muted" />
                  <ChatBot />
                </div>
              </div>
            </>
          ) : (
            <div className="flex-1 flex items-center justify-center">
              <ClipLoader color="#9436d6" size={90} />
            </div>
          )}
        </div>
      </div>
    </div>
  );
}
